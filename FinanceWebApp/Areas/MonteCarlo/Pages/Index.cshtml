@page
@model FinanceWebApp.Areas.MonteCarlo.Pages.IndexModel
@{
}

<h1>Monte Carlo Simulation</h1>

<form class="mt-4 mb-4" action="" method="get">
    <div class="form-group">
        <label asp-for="MonteCarloFormModel.NumYears">Number of Years:</label>
        <input class="form-control" asp-for="MonteCarloFormModel.NumYears"/>
        <span asp-validation-for="MonteCarloFormModel.NumYears" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="MonteCarloFormModel.InitialValue">Initial Value:</label>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text">$</span>
            </div>
            <input class="form-control" asp-for="MonteCarloFormModel.InitialValue"/>
            <div class="input-group-append">
                <span class="input-group-text">.00</span>
            </div>
        </div>
        <span asp-validation-for="MonteCarloFormModel.InitialValue" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="MonteCarloFormModel.Contribution">Contribution:</label>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text">$</span>
            </div>
            <input class="form-control" asp-for="MonteCarloFormModel.Contribution"/>            
            <div class="input-group-append">
                <span class="input-group-text">.00</span>
            </div>
        </div>
        <span asp-validation-for="MonteCarloFormModel.Contribution" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<canvas id="myChart" class="mt-4 mb-4" width="400" height="400"></canvas>

@if (Model.ModelState.IsValid)
{
    <div class="d-flex justify-content-center">
        <div>
            <div class="row">
                <div class="col">Max:</div>
                <div class="col">@Model.IRRs["Max"].ToString("P2")</div>
            </div>
            <div class="row">
                <div class="col">Median:</div>
                <div class="col">@Model.IRRs["Median"].ToString("P2")</div>
            </div>
            <div class="row">
                <div class="col">Min:</div>
                <div class="col">@Model.IRRs["Min"].ToString("P2")</div>
            </div>
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>

    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.XAxis)),
                datasets: @Html.Raw(Json.Serialize(Model.TrialPercentiles))
            },
            options: {
                scales: {
                    yAxes: [
                        {
                            ticks: {
                                beginAtZero: true,
                                callback: function (value, index, values) {
                                    return value.toLocaleString("en-US", { style: "currency", currency: "USD" });
                                }
                            }
                        }]
                },
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            return tooltipItem.yLabel.toLocaleString("en-US", { style: "currency", currency: "USD" });
                        }
                    }
                }
            }
        });
    </script>
}