@page
@model FinanceWebApp.Pages.NetworthPercentileCalculatorModel
@{
    ViewData["Title"] = "Networth Percentile Calculator";
}

<h1>Networth Percentile Calculator</h1>

<form class="mt-4 mb-4" action="" method="get">
    <div class="form-group">
        <label asp-for="NetworthPercentileCalculatorFormModel.MinAge">Minimum Age:</label>
        <input class="form-control" asp-for="NetworthPercentileCalculatorFormModel.MinAge" />
        <span asp-validation-for="NetworthPercentileCalculatorFormModel.MinAge" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="NetworthPercentileCalculatorFormModel.MaxAge">Maximum Age:</label>
        <input class="form-control" asp-for="NetworthPercentileCalculatorFormModel.MaxAge" />
        <span asp-validation-for="NetworthPercentileCalculatorFormModel.MaxAge" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="NetworthPercentileCalculatorFormModel.Networth">Current Networth:</label>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text">$</span>
            </div>
            <input class="form-control" asp-for="NetworthPercentileCalculatorFormModel.Networth" />
            <div class="input-group-append">
                <span class="input-group-text">.00</span>
            </div>
        </div>
        <span asp-validation-for="NetworthPercentileCalculatorFormModel.Networth" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>
<div>
    <h3>Ranked: @Model.Percentile.ToString("P2")</h3>
</div>
<canvas id="myChart" class="mt-4 mb-4" width="400" height="400"></canvas>

@section Scripts {
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>

    <script>
        var ctx = document.getElementById('myChart');
        var myChart = new Chart(ctx,
            {
                type: 'bar',
                data: {
                    labels: @Html.Raw(@Json.Serialize(@Model.XAxis)),
                    datasets: [
                        {
                            data: @Html.Raw(@Json.Serialize(@Model.Percentiles))
                        }
                    ]
                },
                options: {
                    scales: {
                        xAxes: [
                            {
                                gridLines: {
                                    offsetGridLines: true
                                }
                            }
                        ],
                        yAxes: [{
                            ticks: {
                                callback: function(value, index, values) {
                                    return value.toLocaleString("en-US",{style:"currency", currency:"USD"});
                                }
                            }
                        }]
                    },
                    tooltips: {
                        callbacks: {
                            label: function (tooltipItem, data) {
                                return tooltipItem.yLabel.toLocaleString("en-US", { style: "currency", currency: "USD" });
                            }
                        }
                    }
                }
            });
    </script>
}